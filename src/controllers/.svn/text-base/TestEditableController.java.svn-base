package controllers;

import creamy.annotation.Bind;
import creamy.mvc.Controller;
import creamy.mvc.Result;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import models.Company;
import models.Computer;

/**
 *
 * @author miyabetaiji
 */
public class TestEditableController extends Controller {

    public Result testEditableIndex() {
        // /TestEditableController/testEditableList/0/name/asc
        // return testEditableList(0, "name", "asc", null);
        computers = Computer.page(0, 5, "name", "asc", "").getList();
        return ok(this);
    }
                
    private List<Computer> computers;
    private CheckeDateFormat formatter = new CheckeDateFormat("yyyy-MM-dd");
    
    public Result testEditableList(int page, String sortBy, String order, @Bind(key="filter") String filter) {
        String checkedFilter = filter == null ? "" : filter;
        computers = Computer.page(page, 5, sortBy, order, checkedFilter).getList();
        return ok(this);
    }
    
    /*
    private Computer computer;
    
    public Result testEditableItem(Integer computerId) {
        computer = Computer.find.byId(computerId);
        return ok(this);
    }
    */
    
    public Result testCompanyName(Integer computerId) {
        Company company = Computer.find.byId(computerId).getCompany();
        return ok(company == null ? "" : company.getName());
    }
    
    public Result updateComputer(@Bind(key="id") Integer id,
                                 @Bind(key="name") String name,
                                 @Bind(key="introduced") String introducedStr,
                                 @Bind(key="discontinued") String discontinuedStr) {
        Computer comp = Computer.find.byId(id);
        // nullケース？
        comp.setName(name);
        try {
            comp.setIntroduced(formatter.parse(introducedStr));
        } catch (ParseException ex) {}
        try {
            comp.setDiscontinued(formatter.parse(discontinuedStr));
        } catch (ParseException ex) {}
        comp.update();
        return ok();
    }
    
    public Result deleteComputer(Integer computerId) {
        Computer.find.byId(computerId).delete();
        return ok();
    }
    
    public Result dataRequest() {
        return ok("testing");
    }
    
    public Result badRequestTest() {
        return badRequest();
    }
    
    public class CheckeDateFormat extends SimpleDateFormat {
        private CheckeDateFormat(String format) { super(format); }
        public String formatWithSpace(Date date) {
            try {
                return super.format(date);
            } catch (Exception ex) {
                return "";
            }
        }
    }
}
