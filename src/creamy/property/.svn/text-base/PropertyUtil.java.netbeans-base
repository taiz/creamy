package creamy.property;

import creamy.Creamy;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * プロパティファイルに関するユーティリティクラス
 * @author Ryusaburo Tanaka (Professor Akiguchi's PBL 2012, AIIT)
 */
public class PropertyUtil {

    /**
     * プロパティファイルのロード（実行ディレクトリ or クラスパスから）
     * @param   プロパティファイル名
     * @return 読み込み済みのプロパティ。読み込み失敗の場合は null
     */
    public static Properties getPropertiesFromFile(String fileName){
        Properties prop    = new Properties();
        try {
            if(new File("." + File.separator + fileName).exists()){
                // 実行ディレクトリに設定ファイルが存在する場合
                prop.load(new FileInputStream(fileName));
            }
            else
            {
                // クラスパスに設定ファイルが存在する場合
                try {
                    prop.load(Thread.currentThread().
                            getContextClassLoader().getResourceAsStream(fileName));
                } catch (Exception exception) {
                    //設定ファイルが存在しない場合
                    return null;
                }
            }
            return prop;
        } catch (IOException ex) {
            Logger.getLogger(Creamy.class.getName()).log(Level.SEVERE, null, ex);
        }
        // ファイルが存在しない場合
        return null;
    }
}
