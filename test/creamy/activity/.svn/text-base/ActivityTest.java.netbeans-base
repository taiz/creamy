/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package creamy.activity;

import creamy.browser.Browser;
import creamy.browser.CreamyTestBase;
import creamy.browser.control.DefaultBrowserMenuBar;
import creamy.global.ApplicationData;
import creamy.mvc.Response;
import creamy.mvc.Status;
import java.lang.reflect.Field;
import java.util.List;
import java.util.Map;
import javafx.application.Platform;
import javafx.scene.Node;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import org.junit.*;
import static org.junit.Assert.*;

/**
 *
 * @author ATakahashi
 */
public class ActivityTest extends CreamyTestBase {
    
    public ActivityTest() {
    }

    @BeforeClass
    public static void setUpClass() throws Exception {
    }

    @AfterClass
    public static void tearDownClass() throws Exception {
    }
    
    @Before
    @Override
    public void setUp() {
        super.setUp();
    }
    
    @After
    public void tearDown() {
    }

    /**
     * Test of getScene method, of class Activity.
     */
    @Test
    public void testGetScene() {
        System.out.println("getScene");
        Activity instance = new ActivityImpl();
        Node expResult = null;
        Node result = instance.getScene();
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of setScene method, of class Activity.
     */
    @Test
    public void testSetScene() {
        System.out.println("setScene");
        Pane scene = null;
        Activity instance = new ActivityImpl();
        instance.setScene(scene);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of initialize method, of class Activity.
     */
    @Test
    public void testInitialize_0args() {
        System.out.println("initialize");
        Activity instance = new ActivityImpl();
        instance.initialize();
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of initialize method, of class Activity.
     */
    @Test
    public void testInitialize_Activity_Map() {
        System.out.println("initialize");
        Activity parent = null;
        Map<Field, Object> params = null;
        Activity instance = new ActivityImpl();
        instance.initialize(parent, params);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of setParent method, of class Activity.
     */
    @Test
    public void testSetParent() {
        System.out.println("setParent");
        Activity parent = null;
        Activity instance = new ActivityImpl();
        instance.setParent(parent);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getParent method, of class Activity.
     */
    @Test
    public void testGetParent() {
        System.out.println("getParent");
        Activity instance = new ActivityImpl();
        Activity expResult = null;
        Activity result = instance.getParent();
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of renderChildren method, of class Activity.
     */
    @Test
    public void testRenderChildren() {
        System.out.println("renderChildren");
        Activity instance = new ActivityImpl();
        instance.renderChildren();
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getNodesByTag method, of class Activity.
     */
    @Test
    public void testGetNodesByTag() {
        System.out.println("getNodesByTag");
        Class<? extends Node> clazz = null;
        Activity instance = new ActivityImpl();
        List expResult = null;
        List result = instance.getNodesByTag(clazz);
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getPackageName method, of class Activity.
     */
    @Test
    public void testGetPackageName() {
        System.out.println("getPackageName");
        Activity instance = new ActivityImpl();
        String expResult = "";
        String result = instance.getPackageName();
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of addChildActivity method, of class Activity.
     */
    @Test
    public void testAddChildActivity() {
        System.out.println("addChildActivity");
        Activity childActivity = null;
        Activity instance = new ActivityImpl();
        instance.addChildActivity(childActivity);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getChildActivities method, of class Activity.
     */
    @Test
    public void testGetChildActivities() {
        System.out.println("getChildActivities");
        Class<? extends Activity> clazz = null;
        Activity instance = new ActivityImpl();
        List expResult = null;
        List result = instance.getChildActivities(clazz);
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of applyStyle method, of class Activity.
     */
    @Test
    public void testApplyStyle() {
        System.out.println("applyStyle");
        Activity instance = new ActivityImpl();
        instance.applyStyle();
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    /**
     * Test of getCssName method, of class Activity.
     */
    @Test
    public void testGetCssName() {
        System.out.println("getCssName");
        Activity instance = new ActivityImpl();
        String expResult = "";
        String result = instance.getCssName();
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

    @Test
    public void testGetApplicationData() {
        System.out.println("getApplicationData");
        AvailableActivity activity = new AvailableActivity();
        String key = "testKey";
        String value = "testValue";
        activity.getApplicationData().put(key, value);
        assertEquals(value, activity.getApplicationData().get(key));
    }
    
    private ActivityImpl act;;
    @Test
    public void testCreateBroker() {
        System.out.println("testCreateBroker");
        Platform.runLater(new Runnable() {
            @Override
            public void run() {
                synchronized(lock) {
                    // Setup
                    act = new ActivityImpl();
                    act.setScene(new HBox());
                    Response response = new Response();
                    response.setStatus(Status.OK);
                    response.setActivity(act);
                    browser.getBrowserPanel().receiveResponse(response);
                }
            }
        });
        try {Thread.sleep(100);} catch (InterruptedException ex) {ex.printStackTrace();}
        synchronized(lock) {
            assertNotNull(act.createBroker());
        }        
    }
    
    public class ActivityImpl extends Activity {

        public void initialize() {
        }
    }
}
